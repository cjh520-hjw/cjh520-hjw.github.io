<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>C&#43;&#43; on 嬉皮士-Hippie</title>
        <link>https://cjh520-hjw.github.io/categories/c&#43;&#43;/</link>
        <description>Recent content in C&#43;&#43; on 嬉皮士-Hippie</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>嬉皮士-Hippie</copyright>
        <lastBuildDate>Sun, 27 Jul 2025 15:22:22 +0800</lastBuildDate><atom:link href="https://cjh520-hjw.github.io/categories/c++/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>C&#43;&#43;初步</title>
        <link>https://cjh520-hjw.github.io/p/c-%E5%88%9D%E6%AD%A5/</link>
        <pubDate>Mon, 14 Jul 2025 00:00:00 +0000</pubDate>
        
        <guid>https://cjh520-hjw.github.io/p/c-%E5%88%9D%E6%AD%A5/</guid>
        <description>&lt;img src="https://cjh520-hjw.github.io/images/C&#43;&#43;/0.png" alt="Featured image of post C&#43;&#43;初步" /&gt;&lt;p&gt;C++对C的增强：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在原来&lt;strong&gt;基于过程&lt;/strong&gt;的机制基础上，对C语言的功能做了扩充——基于过程的结构化程序设计&lt;/li&gt;
&lt;li&gt;增加了&lt;strong&gt;面对对象&lt;/strong&gt;的机制——面向对象的程序设计(信息隐蔽与封装)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Java与C++&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Java网络编程有优势&lt;/li&gt;
&lt;li&gt;C++系统编程与驱动编程有优势&lt;/li&gt;
&lt;li&gt;C++发挥空间更大&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;学习路径
程序=数据结构+算法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;C++&lt;/li&gt;
&lt;li&gt;数据结构（算法的基础）&lt;/li&gt;
&lt;li&gt;算法&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;最简单的程序&#34;&gt;最简单的程序
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;I&amp;#39;m Great!&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在main前面加int，函数的最后加&lt;code&gt;return 0;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;cout与cin是系统定义的对象名，cin不要用endl;&lt;/li&gt;
&lt;li&gt;有程序输入输出时，必须使用&lt;code&gt;#include &amp;lt;iostream&amp;gt;&lt;/code&gt;与&lt;code&gt;using namespace std;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;若用C风格的&lt;code&gt;#include &amp;lt;iostream.h&amp;gt;&lt;/code&gt;则无需&lt;code&gt;using namespace std&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;包含两个函数的简单程序&#34;&gt;包含两个函数的简单程序
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;namespce&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;max=&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;主函数main与一个被调用函数max——函数调用&lt;/li&gt;
&lt;li&gt;输入的a,b要用空格隔开&lt;/li&gt;
&lt;li&gt;若被调用的函数max在主函数main之后，则需在main内对max进行声明：
&lt;code&gt;int max(int,int);&lt;/code&gt;——形参&lt;/li&gt;
&lt;li&gt;函数声明的位置应当放在函数调用&lt;code&gt;m = max(a,b)&lt;/code&gt;之前——实参&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;简单的面向对象程序&#34;&gt;简单的面向对象程序
&lt;/h2&gt;&lt;p&gt;声明一个类 -&amp;gt; 定义类类型的变量(对象) -&amp;gt; 在main里对对象进行操作&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 声明一个类，类名为Student
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Student&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;score&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;setdata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               &lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;score&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;num=&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;score=&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;score&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 定义类类型的变量(对象)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Student&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stud1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stud2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 主函数——程序的入口
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;stud1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setdata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;stud2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setdata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;stud1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;stud2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;声明一个类，包括数据和函数（有权调用这组数据），数据和函数&lt;strong&gt;有公有有私有&lt;/strong&gt;——信息隐蔽与封装&lt;/li&gt;
&lt;li&gt;私有的：不能被类以外的语句调用，除了&lt;strong&gt;友元类&lt;/strong&gt;成员——链接&lt;/li&gt;
&lt;li&gt;Student是用户自定义的类型。类型不占空间，对象才占空间。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.&lt;/code&gt;是成员运算符，左对象、右成员。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;程序的构成&#34;&gt;程序的构成
&lt;/h2&gt;$$
\left\{ \begin{array}{l}
	\text{程序}\left\{ \begin{array}{l}
	\text{程序单位}+\text{编译单位（文件）}\left\{ \begin{array}{l}
	\text{预处理指令\#}include\\
	\text{全局声明部分}\left\{ \begin{array}{l}
	\text{自定义的类型声明}\\
	\text{变量的定义}\\
	\text{函数的声明}\\
\end{array} \right.\\
	\text{函数}\left\{ \begin{array}{l}
	\text{函数首部}\left\{ \begin{array}{l}
	\text{函数名与类型}\\
	\text{形参名与类型}\\
\end{array} \right.\\
	\text{函数体}\left\{ \begin{array}{l}
	\text{局部声明}\\
	\text{执行}\\
\end{array} \right.\\
\end{array} \right.\\
\end{array} \right.\\
	\\
\end{array} \right.\\
	\\
\end{array} \right. 
$$&lt;h2 id=&#34;程序的编写与实现&#34;&gt;程序的编写与实现
&lt;/h2&gt;&lt;h3 id=&#34;编译&#34;&gt;编译
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;词法检查：拼写&lt;/li&gt;
&lt;li&gt;语法检查&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;编译器：把源程序翻译为二进制的目标程序
C++的源程序是&lt;code&gt;.cpp&lt;/code&gt;，Windows的目标程序是&lt;code&gt;.obj&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;编译结束后显示所有编译出错信息：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;error&lt;/li&gt;
&lt;li&gt;warning&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;凡是检查出错误的程序，都不会生成目标程序，必须改正后重新编译&lt;/p&gt;
&lt;h3 id=&#34;连接&#34;&gt;连接
&lt;/h3&gt;&lt;p&gt;通过编译后所有&lt;code&gt;.obj&lt;/code&gt;与&lt;code&gt;库文件和其他目标程序&lt;/code&gt;连接起来，形成可执行的二进制文件&lt;code&gt;.exe&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;运行&#34;&gt;运行
&lt;/h3&gt;&lt;p&gt;运行&lt;code&gt;.exe&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cjh520-hjw.github.io/images/C&amp;#43;&amp;#43;/1.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
&lt;img src=&#34;https://cjh520-hjw.github.io/images/C&amp;#43;&amp;#43;/2.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;
&lt;img src=&#34;https://cjh520-hjw.github.io/images/C&amp;#43;&amp;#43;/3.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>数据存储、表示形式、基本运算</title>
        <link>https://cjh520-hjw.github.io/p/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E8%A1%A8%E7%A4%BA%E5%BD%A2%E5%BC%8F%E5%9F%BA%E6%9C%AC%E8%BF%90%E7%AE%97/</link>
        <pubDate>Thu, 17 Jul 2025 00:00:00 +0000</pubDate>
        
        <guid>https://cjh520-hjw.github.io/p/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E8%A1%A8%E7%A4%BA%E5%BD%A2%E5%BC%8F%E5%9F%BA%E6%9C%AC%E8%BF%90%E7%AE%97/</guid>
        <description>&lt;img src="https://cjh520-hjw.github.io/images/C&#43;&#43;/0.png" alt="Featured image of post 数据存储、表示形式、基本运算" /&gt;&lt;h2 id=&#34;数据类型&#34;&gt;数据类型
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://cjh520-hjw.github.io/images/C&amp;#43;&amp;#43;/4.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;还可以构成更复杂的结构：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;指针和结构体-&amp;gt;表、树、栈&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;数值范围&#34;&gt;数值范围
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://cjh520-hjw.github.io/images/C&amp;#43;&amp;#43;/5.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;总结来说，4个字节占32位的原因是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个字节定义为8位。&lt;/li&gt;
&lt;li&gt;4个字节就是 4×8=32 位。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;常量&#34;&gt;常量
&lt;/h2&gt;&lt;h3 id=&#34;数值常量&#34;&gt;数值常量
&lt;/h3&gt;&lt;h4 id=&#34;整型常量&#34;&gt;整型常量
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;十进制整数：long int 型在后面加上&lt;code&gt;L&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;八进制整数：开头加上&lt;code&gt;数字0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;十六进制整数：开头加上&lt;code&gt;0x&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;浮点数&#34;&gt;浮点数
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;十进制小数：单精度末尾加上&lt;code&gt;f&lt;/code&gt;，长双精度末尾加上&lt;code&gt;L&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;指数：&lt;code&gt;e12&lt;/code&gt;表示 \(10^{12}\)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;字符常量&#34;&gt;字符常量
&lt;/h3&gt;&lt;h4 id=&#34;普通的字符常量&#34;&gt;普通的字符常量
&lt;/h4&gt;&lt;p&gt;&amp;lsquo;a&amp;rsquo;  √&lt;/p&gt;
&lt;p&gt;&amp;lsquo;ab&amp;rsquo;  ×&lt;/p&gt;
&lt;h4 id=&#34;转义字符常量&#34;&gt;转义字符常量
&lt;/h4&gt;&lt;p&gt;&amp;lsquo;\n&amp;rsquo;  √    &lt;strong&gt;反斜杠往右撇&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cjh520-hjw.github.io/images/C&amp;#43;&amp;#43;/6.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cjh520-hjw.github.io/images/C&amp;#43;&amp;#43;/7.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;details&gt;
  &lt;summary style=&#34;list-style-type: none; cursor: pointer;&#34;&gt;
  &lt;span style=&#34;color: #EFAE8E; display: inline-block; font-size: 30px; transform: rotate(0deg); transition: transform 0.2s; margin-right: 6px;&#34;&gt;🫣&lt;/span&gt;
  八进制、退格符
&lt;/summary
&lt;p&gt;题目：下面代码的运行结果是什么&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c4&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;\101&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c5&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;\116&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\t\b&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;\t&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c5&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;答案：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;abc  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       A       N  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;分析：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;字符变量解码&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;c1=&#39;a&#39;&lt;/code&gt;、&lt;code&gt;c2=&#39;b&#39;&lt;/code&gt;、&lt;code&gt;c3=&#39;c&#39;&lt;/code&gt;：直接对应 &lt;strong&gt;ASCII 字符&lt;/strong&gt; &lt;code&gt;a&lt;/code&gt;、&lt;code&gt;b&lt;/code&gt;、&lt;code&gt;c&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;c4=&#39;\101&#39;&lt;/code&gt;：八进制转义符转 &lt;strong&gt;ASCII 字符&lt;/strong&gt; 。&lt;br&gt;
先八进制数 &lt;code&gt;101&lt;/code&gt; 转十进制： 按位权展开， \(1×8^2 + 0×8^1 + 1×8^0 = 64 + 0 + 1 = 65\) 。&lt;br&gt;
再对应 ASCII 字符 &lt;code&gt;A&lt;/code&gt;（ASCII 表中十进制 65 代表 &lt;code&gt;A&lt;/code&gt; ）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;c5=&#39;\116&#39;&lt;/code&gt;：&lt;strong&gt;八进制转义符转 ASCII 字符&lt;/strong&gt; 。&lt;br&gt;
先八进制数 &lt;code&gt;116&lt;/code&gt; 转十进制： 按位权展开，\(1×8^2 + 1×8^1 + 6×8^0 = 64 + 8 + 6 = 78\) 。&lt;br&gt;
再对应 ASCII 字符 &lt;code&gt;N&lt;/code&gt;（ASCII 表中十进制 78 代表 &lt;code&gt;N&lt;/code&gt; ）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;第二行输出&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;\t\b&amp;quot;&lt;/code&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;\t&lt;/code&gt;：制表符，使光标跳转到&lt;strong&gt;第 8 列&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\b&lt;/code&gt;：退格符，使光标回退到&lt;strong&gt;第 7 列&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;&amp;lt; c4&lt;/code&gt;&lt;/strong&gt;：在第 7 列输出 &lt;code&gt;A&lt;/code&gt;（字符 &lt;code&gt;c4&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;&amp;lt; &#39;\t&#39;&lt;/code&gt;&lt;/strong&gt;：光标从第 8 列（输出 &lt;code&gt;A&lt;/code&gt; 后自动移到第 8 列）跳转到下一个制表位 &lt;strong&gt;第 16 列&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;&amp;lt; c5&lt;/code&gt;&lt;/strong&gt;：在第 16 列输出 &lt;code&gt;N&lt;/code&gt;（字符 &lt;code&gt;c5&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;最终效果：第 7 列显示 &lt;code&gt;A&lt;/code&gt;，第 16 列显示 &lt;code&gt;N&lt;/code&gt;，中间填充 8 个空格（制表位特性，自己画图试一下）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt; 
&lt;details&gt;
  &lt;summary style=&#34;list-style-type: none; cursor: pointer;&#34;&gt;
  &lt;span style=&#34;color: #EFAE8E; display: inline-block; font-size: 30px; transform: rotate(0deg); transition: transform 0.2s; margin-right: 6px;&#34;&gt;🫣&lt;/span&gt;
  制表符
&lt;/summary
&lt;p&gt;关键是画图（8后一次，8后一次）&lt;/p&gt;
&lt;p&gt;题目：下面代码的运行结果是什么&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;+&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;+&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;12345678123&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;4567812345678&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;He says: &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;C++ is very interesting!&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;I say: &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\t\t&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;He says: &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;C++ is very interesting!&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;答案&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;123456781234567812345678He says: &amp;#34;C++ is very interesting!&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;I say: &amp;#34;C++&amp;#34;            He says: &amp;#34;C++ is very interesting!&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/details&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;转义字符只代表一个字符，在内存中占一个字节&lt;/li&gt;
&lt;li&gt;编译系统视角：见到&lt;code&gt;\&lt;/code&gt;会接着找它后面的字符，把它们处理成一个字符&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;内存中的字符数据&#34;&gt;内存中的字符数据
&lt;/h4&gt;&lt;p&gt;字符数据以ASCII码存储，所以字符与整型可通用（可赋值可运算）&lt;/p&gt;
&lt;p&gt;&amp;lsquo;a&amp;rsquo;——97&lt;/p&gt;
&lt;p&gt;&amp;lsquo;A&amp;rsquo;——65&lt;/p&gt;
&lt;p&gt;字符型数据和整型数据是可以通用的。但是应注意字符数据只占一个字节，它只能存放 0~255 范围内的整数。&lt;/p&gt;
&lt;p&gt;一个字节有8位，每位可以是0或1，所以能表示的不同值的总数是256个（从0计数到255）。&lt;/p&gt;
&lt;h4 id=&#34;字符串常量&#34;&gt;字符串常量
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;系统会在末尾加上&lt;code&gt;\0&lt;/code&gt;作为字符串结束的标志。&lt;/p&gt;
&lt;p&gt;所以&amp;quot;abc&amp;quot;在内存中占&lt;code&gt;3+1=4&lt;/code&gt;个字节&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&#39;a&#39;&lt;/code&gt;占1个字节，&lt;code&gt;&amp;quot;a&amp;quot;&lt;/code&gt;占2个字节&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;quot;abc\n&amp;quot;&lt;/code&gt;包含4个字符，5个字节&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;quot;abc\\n&amp;quot;&lt;/code&gt;中的&lt;code&gt;\\&lt;/code&gt;是合法的转义字符，所以有5个字符（&lt;code&gt;a&lt;/code&gt;、&lt;code&gt;b&lt;/code&gt;、&lt;code&gt;c&lt;/code&gt;、&lt;code&gt;\&lt;/code&gt;、&lt;code&gt;n&lt;/code&gt;），&lt;strong&gt;&lt;code&gt;\\&lt;/code&gt;代表&lt;code&gt;\&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;字符串常量要用字符数组来存放。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;符号常量&#34;&gt;符号常量
&lt;/h3&gt;&lt;p&gt;就是用符号代表常量，如&lt;code&gt;PRICE&lt;/code&gt;代表&lt;code&gt;30&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#define PRICE 30&lt;/code&gt;不是语句，末尾不加分号&lt;/p&gt;
&lt;p&gt;在预编译处理时，所有的&lt;code&gt;PRICE&lt;/code&gt;被置换为&lt;code&gt;30&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;符号常量在C中用比较多，在C++中常用&lt;code&gt;常变量&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;没有类型，内存中没有命名存储单元&lt;/p&gt;
&lt;h4 id=&#34;好处&#34;&gt;好处
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;见名知意，不提倡使用很多的直接变量&lt;/li&gt;
&lt;li&gt;在需要改变一个常量的时候，能够”一改全改“，如商品单价&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;变量&#34;&gt;变量
&lt;/h2&gt;&lt;p&gt;就是值可以改变的量&lt;/p&gt;
&lt;p&gt;因为是通过&lt;code&gt;变量名&lt;/code&gt;找到变量值，所以变量名等同地址&lt;/p&gt;
&lt;h3 id=&#34;变量名&#34;&gt;变量名
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;只有字母、数字、下划线，第一个字符必须为字母或下划线&lt;/li&gt;
&lt;li&gt;一般变量名用小写字母，常量用大写字母&lt;/li&gt;
&lt;li&gt;变量名不能与关键字、系统函数名、类名相同&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;匈牙利变量命名法&#34;&gt;匈牙利变量命名法
&lt;/h4&gt;&lt;p&gt;变量前加一个代表&lt;code&gt;类型&lt;/code&gt;的字母，如&lt;code&gt;iCount&lt;/code&gt;、&lt;code&gt;cSex&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;驼峰表示法&#34;&gt;驼峰表示法
&lt;/h4&gt;&lt;p&gt;如&lt;code&gt;studentName&lt;/code&gt;、&lt;code&gt;teacherName&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;定义变量&#34;&gt;定义变量
&lt;/h3&gt;&lt;p&gt;在第一次使用该变量前定义即可&lt;/p&gt;
&lt;blockquote class=&#34;alert alert-error&#34;&gt;
    &lt;p&gt;Error：变量……未经声明&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;整型变量与实型变量&lt;/p&gt;
&lt;h3 id=&#34;对变量初始化&#34;&gt;对变量初始化
&lt;/h3&gt;&lt;p&gt;可以是常量，也可以是有确定值的表达式&lt;/p&gt;
&lt;p&gt;&lt;code&gt;float a,b=2.5*sin(2.0);&lt;/code&gt;中a没有被初始化&lt;/p&gt;
&lt;p&gt;初始化是在程序运行时完成的，不是在编译时完成的&lt;/p&gt;
&lt;p&gt;若未赋初值，则初值不可预测&lt;/p&gt;
&lt;h3 id=&#34;常变量只读变量&#34;&gt;常变量/只读变量
&lt;/h3&gt;&lt;p&gt;值不能改变的变量&lt;/p&gt;
&lt;p&gt;可以用表达式初始化&lt;/p&gt;
&lt;p&gt;有类型，内存中有命名的存储单元，可以用&lt;code&gt;size of&lt;/code&gt;测出长度&lt;/p&gt;
&lt;h4 id=&#34;应用的需要&#34;&gt;应用的需要
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;有时要求函数的参数不允许改变&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;c的运算符&#34;&gt;C++的运算符
&lt;/h2&gt;&lt;p&gt;把&lt;code&gt;=&lt;/code&gt;也作为运算符处理，这样&lt;code&gt;a=b=c=4&lt;/code&gt;也是合法的表达式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;算术运算符&lt;/p&gt;
&lt;p&gt;+、-、*（乘）、/（除）、%（整除求余）、++（自加）、&amp;ndash;（自减）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关系运算符&lt;/p&gt;
&lt;p&gt;&amp;gt;、&amp;lt;、==（等于）、&amp;gt;=、&amp;lt;=、!=（不等于）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;逻辑运算符&lt;/p&gt;
&lt;p&gt;&amp;amp;&amp;amp;（逻辑与）、||（逻辑或）、！(逻辑非)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;位运算符&lt;/p&gt;
&lt;p&gt;&amp;amp;（按位与）、|（按位或）、^（按位异或）、~（按位取反）、&amp;laquo;（按位左移）、&amp;raquo;（按位右移）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;赋值运算符及其扩展赋值运算符&lt;/p&gt;
&lt;p&gt;=（赋值）、+=、-=、*=（乘等于）、/=（除等于）、%=（模等于）、
&amp;amp;=（按位与等于）、|=（按位或等于）、^=（按位异或等于）、&amp;laquo;=（左移等于）、&amp;raquo;=（右移等于）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;条件运算符&lt;/p&gt;
&lt;p&gt;? :（条件运算符）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;逗号运算符&lt;/p&gt;
&lt;p&gt;,（逗号运算符）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sizeof运算符&lt;/p&gt;
&lt;p&gt;sizeof（类型名）或sizeof（变量名）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;指针运算符&lt;/p&gt;
&lt;p&gt;*（指针解引用）、&amp;amp;（取地址）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;引用运算符&lt;/p&gt;
&lt;p&gt;&amp;amp;（引用）、&amp;amp;&amp;amp;（右值引用）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;成员访问运算符&lt;/p&gt;
&lt;p&gt;.（&lt;strong&gt;成员&lt;/strong&gt;访问）、-&amp;gt;（&lt;strong&gt;指针成员&lt;/strong&gt;访问）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;类型转换运算符&lt;/p&gt;
&lt;p&gt;（类型）或类型（）
static_cast&amp;lt;类型名&amp;gt;(表达式)、dynamic_cast&amp;lt;类型名&amp;gt;(表达式)、const_cast&amp;lt;类型名&amp;gt;(表达式)、reinterpret_cast&amp;lt;类型名&amp;gt;(表达式)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;new和delete运算符&lt;/p&gt;
&lt;p&gt;new（动态内存分配）、delete（动态内存释放）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下标运算符&lt;/p&gt;
&lt;p&gt;[]（数组下标访问）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其他运算符&lt;/p&gt;
&lt;p&gt;函数调用运算符()&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;算术运算符与算术表达式&#34;&gt;算术运算符与算术表达式
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;%（模运算符/求余运算符）两边均为&lt;strong&gt;整型&lt;/strong&gt;数据&lt;/li&gt;
&lt;li&gt;相除若有一个操作数是负数，则向零取整（取整是向零靠拢的）&lt;/li&gt;
&lt;li&gt;加减乘除中若有一个操作数是float型，则运算结果是double型&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;运算符的优先级与结合性&#34;&gt;运算符的优先级与结合性
&lt;/h3&gt;&lt;p&gt;算术运算符的结合性是&lt;code&gt;左结合性&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;各类型数据间的混合运算隐式转换&#34;&gt;各类型数据间的混合运算（隐式转换）
&lt;/h3&gt;&lt;p&gt;char,short -&amp;gt; int&lt;/p&gt;
&lt;p&gt;float -&amp;gt; double&lt;/p&gt;
&lt;p&gt;int -&amp;gt; long&lt;/p&gt;
&lt;p&gt;int -&amp;gt; double&lt;/p&gt;
&lt;p&gt;表达式 &lt;code&gt;10 + &#39;a&#39; + i * f - d / e&lt;/code&gt; 的运算次序如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;执行 &lt;code&gt;10 + &#39;a&#39;&lt;/code&gt; ：先把字符 &lt;code&gt;&#39;a&#39;&lt;/code&gt; 转换为整数 97，二者相加是 107 。&lt;/li&gt;
&lt;li&gt;&lt;u&gt;执行 &lt;code&gt;i * f&lt;/code&gt;：把 &lt;code&gt;i&lt;/code&gt; 和 &lt;code&gt;f&lt;/code&gt; 都转换成 &lt;code&gt;double&lt;/code&gt; 类型，结果为 &lt;code&gt;double&lt;/code&gt; 型 。&lt;/u&gt;&lt;/li&gt;
&lt;li&gt;执行整数 107 与 &lt;code&gt;i * f&lt;/code&gt; 结果相加：把整数 107 转成双精度数（形式为 107.000…00 ），再和 &lt;code&gt;i * f&lt;/code&gt; 的结果相加，结果是 &lt;code&gt;double&lt;/code&gt; 型 。&lt;/li&gt;
&lt;li&gt;执行 &lt;code&gt;d / e&lt;/code&gt; ：把变量 &lt;code&gt;e&lt;/code&gt; 转换成 &lt;code&gt;double&lt;/code&gt; 型，相除后为 &lt;code&gt;double&lt;/code&gt; 型 。&lt;/li&gt;
&lt;li&gt;执行前面相加结果与 &lt;code&gt;d / e&lt;/code&gt; 结果相减：用 &lt;code&gt;10 + &#39;a&#39; + i * f&lt;/code&gt; 的结果减去 &lt;code&gt;d / e&lt;/code&gt; 的结果，最终结果为 &lt;code&gt;double&lt;/code&gt; 型 。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;自增自减运算符&#34;&gt;自增自减运算符
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;常用于循环语句的循环变量中&lt;/li&gt;
&lt;li&gt;常用于使指针指向下一个地址&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;强转运算符显式转换&#34;&gt;强转运算符（显式转换）
&lt;/h3&gt;&lt;p&gt;类型名（表达式）&lt;/p&gt;
&lt;p&gt;得到的是一个所需类型的中间数据，原变量类型不会改变&lt;/p&gt;
&lt;h2 id=&#34;赋值运算符与赋值表达式&#34;&gt;赋值运算符与赋值表达式
&lt;/h2&gt;&lt;h3 id=&#34;赋值中的类型转换&#34;&gt;赋值中的类型转换
&lt;/h3&gt;&lt;p&gt;不同类型的整型数据间的赋值：按存储单元中的存储形式直接传送&lt;/p&gt;
&lt;h3 id=&#34;复合赋值运算符&#34;&gt;复合赋值运算符
&lt;/h3&gt;&lt;p&gt;凡是二元运算符都可以与&lt;code&gt;=&lt;/code&gt;结合&lt;/p&gt;
&lt;h3 id=&#34;赋值表达式&#34;&gt;赋值表达式
&lt;/h3&gt;&lt;p&gt;表达式与常变量不可以作&lt;code&gt;左值&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;右结合：&lt;code&gt;a=(b=10)/(c=2)&lt;/code&gt;的值是5&lt;/p&gt;
&lt;p&gt;赋值表达式中的“表达式”又可以是一个赋值表达式如&lt;code&gt;a=(b=5)&lt;/code&gt;,&lt;code&gt;b=5&lt;/code&gt;这个赋值表达式的值是5，所以&lt;code&gt;a=5&lt;/code&gt;，所以整个赋值表达式的值是5&lt;/p&gt;
&lt;h2 id=&#34;逗号运算符和逗号表达式&#34;&gt;逗号运算符和逗号表达式
&lt;/h2&gt;&lt;p&gt;顺序求值&lt;/p&gt;
&lt;p&gt;逗号优先级&lt;strong&gt;低于&lt;/strong&gt;赋值&lt;/p&gt;
&lt;p&gt;常用于循环for语句&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
